["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$requestAnimationFrame",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$sv.timeline.core","~:imports",null,"~:requires",["^ ","~$r","~$reagent.core","^;","^;"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$state",["^ ","^7","~$sv.timeline.core/state","~:file","/home/nils/workspace/git/Timeline/src/cljs/sv/timeline/core.cljs","~:line",4,"~:column",1,"~:end-line",4,"~:end-column",15,"~:meta",["^ ","^A","/home/nils/workspace/git/Timeline/src/cljs/sv/timeline/core.cljs","^B",4,"^C",10,"^D",4,"^E",15],"~:tag","~$reagent.ratom/RAtom"],"~$play-loop",["^ ","~:protocol-inline",null,"^F",["^ ","^A","/home/nils/workspace/git/Timeline/src/cljs/sv/timeline/core.cljs","^B",7,"^C",7,"^D",7,"^E",16,"~:arglists",["~#list",["~$quote",["^L",[["~$f"]]]]],"~:doc","Starts a `js/requestAnimationFrame` loop to play a timeline. The\n   browser renders a frame approximately every 16.66 milliseconds (60\n   FPS). Adds the current `(js/performance.now)` as `:time/now` to the\n   map in the `state` Clojure atom, before it applies the function `f`\n   to the `state` value. The loop is stopped, as soon as the flag\n   `:time/stopped` is found in the state value."],"^7","~$sv.timeline.core/play-loop","^A","/home/nils/workspace/git/Timeline/src/cljs/sv/timeline/core.cljs","^E",16,"~:method-params",["^L",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^C",1,"~:variadic?",false,"^B",7,"~:ret-tag","~$js","^D",7,"~:max-fixed-arity",1,"~:fn-var",true,"^K",["^L",["^M",["^L",[["~$f"]]]]],"^N","Starts a `js/requestAnimationFrame` loop to play a timeline. The\n   browser renders a frame approximately every 16.66 milliseconds (60\n   FPS). Adds the current `(js/performance.now)` as `:time/now` to the\n   map in the `state` Clojure atom, before it applies the function `f`\n   to the `state` value. The loop is stopped, as soon as the flag\n   `:time/stopped` is found in the state value."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$r","^;","^;","^;"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:time/now","~:duration","~:time/stopped","~:time/current"]],"~:order",["^12","^13","^11","^10"]],"^N",null]