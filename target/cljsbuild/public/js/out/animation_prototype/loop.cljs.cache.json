["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$requestAnimationFrame",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$animation-prototype.loop","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$animation-loop",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/nils/workspace/git/Timeline/src/cljs/animation_prototype/loop.cljs","~:line",3,"~:column",7,"~:end-line",3,"~:end-column",21,"~:arglists",["~#list",["~$quote",["^G",[["~$animation","~$render!"]]]]],"~:doc","The `animation-loop` expects a function `animate` that takes one\n       argument: the animation-time. The `animate` function should return a\n       sequence of `render-operations` which represent the side-effects as\n       data that are necessary to render the animation at the given\n       animation-time. The `render-operations` are passed to the `render!`\n       function that performs the side-effects. The loop runs until\n       `animate` returns a falsy value."],"^7","~$animation-prototype.loop/animation-loop","^A","/home/nils/workspace/git/Timeline/src/cljs/animation_prototype/loop.cljs","^E",21,"~:method-params",["^G",[["^I","^J"]]],"~:protocol-impl",null,"~:arglists-meta",["^G",[null,null]],"^C",1,"~:variadic?",false,"^B",3,"~:ret-tag","~$js","^D",3,"~:max-fixed-arity",2,"~:fn-var",true,"^F",["^G",["^H",["^G",[["^I","^J"]]]]],"^K","The `animation-loop` expects a function `animate` that takes one\n       argument: the animation-time. The `animate` function should return a\n       sequence of `render-operations` which represent the side-effects as\n       data that are necessary to render the animation at the given\n       animation-time. The `render-operations` are passed to the `render!`\n       function that performs the side-effects. The loop runs until\n       `animate` returns a falsy value."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:duration","~:render"]],"~:order",["^Y","^Z"]],"^K",null]